/* Variables pour les couleurs néon */
:root {
    --neon-blue: #00FFFF; /* Bleu cyan vif */
    --neon-blue-light: #88FFFF; /* Bleu plus clair pour le texte */
    --neon-blue-dark: #008080; /* Bleu foncé pour les accents */
    --bg-dark: #0a0a0a; /* Fond très sombre */
    --bg-medium: #1a1a1a; /* Fond légèrement moins sombre */
    --bg-light: #2c2c2c; /* Fond pour les éléments interactifs */
    --text-color: #e0e0e0; /* Couleur de texte par défaut */
}

/* Styles généraux du corps de la page */
body {
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    display: flex;
    flex-direction: column;
    justify-content: flex-start;
    align-items: center; /* Centre le contenu horizontalement */
    min-height: 100vh; /* Prend au moins toute la hauteur de la vue */
    background-color: var(--bg-dark);
    color: var(--text-color);
    margin: 0;
    padding: 20px; /* Ajoute du padding autour du contenu global */
    box-sizing: border-box; /* Inclut padding et border dans la taille totale */
    overflow-x: hidden; /* Empêche le défilement horizontal de la page */
}

/* Style du titre principal */
h1 {
    color: var(--neon-blue);
    margin-bottom: 20px;
    text-align: center;
    text-shadow: 0 0 5px var(--neon-blue), 0 0 10px var(--neon-blue);
    font-size: 2.5em;
}

/* Conteneur principal pour la vidéo et la liste des chaînes */
.main-container {
    display: flex; /* Active Flexbox pour aligner les enfants (vidéo et liste) */
    flex-direction: row; /* Aligne les enfants horizontalement (par défaut, mais explicite) */
    flex-wrap: nowrap; /* ❤️ TRÈS IMPORTANT : Empêche les éléments de passer à la ligne */
    width: 95%; /* Prend 95% de la largeur du parent (body) */
    max-width: 1200px; /* Ne dépasse pas 1200px de large */
    margin-top: 20px;
    background-color: var(--bg-medium);
    border-radius: 12px;
    overflow: hidden; /* Cache tout ce qui dépasse les bords du main-container */
    box-shadow: 0 0 40px rgba(0, 255, 255, 0.4), 0 0 20px rgba(0, 255, 255, 0.2);
    border: 1px solid var(--neon-blue-dark);
    align-items: flex-start; /* Aligne les éléments enfants en haut du conteneur */

    /* La hauteur du .main-container sera dictée par la hauteur du #videoPlayer (via padding-bottom). */
    /* La ligne suivante est commentée car elle pourrait limiter la hauteur et causer des problèmes. */
    /* max-height: calc(100vh - 80px); */
}

#videoPlayer {
    flex-grow: 1;
    background-color: #000;
    /* overflow: hidden; <-- SUPPRIMEZ OU COMMENTEZ CETTE LIGNE */
    position: relative;
    padding-bottom: 56.25%; /* Définit la hauteur du lecteur (ratio 16:9 de sa largeur) */
    height: 0; /* Assure que padding-bottom définit la hauteur */
    border-right: 1px solid var(--neon-blue-dark);
}

#videoPlayer video {
    position: absolute; /* Positionne la vidéo absolument par rapport à #videoPlayer */
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    
    object-fit: contain; /* Utiliser 'contain' pour éviter le rognage et voir toute la vidéo */
}

/* Conteneur de la liste des chaînes (y compris l'heure) */
#channelListContainer {
    width: 220px; /* Largeur fixe pour la liste des chaînes */
    background-color: var(--bg-medium);
    display: flex; /* Active Flexbox pour empiler l'heure et la liste */
    flex-direction: column; /* Empile les enfants (heure et liste) verticalement */
    /* overflow-y: auto; est retiré d'ici, il est maintenant sur #channelList */
    padding-bottom: 15px; /* Espace en bas du conteneur global des chaînes */

    /* ❤️ TRÈS IMPORTANT : Prend 100% de la hauteur disponible de son parent (.main-container) */
    height: 100%;
    /* max-height: 100%; est redondant avec height: 100% dans ce contexte */
}

/* Style de l'heure actuelle */
#currentTime {
    background-color: var(--bg-dark);
    color: var(--neon-blue-light);
    padding: 10px;
    text-align: center;
    font-size: 1.2em;
    font-weight: bold;
    border-bottom: 1px solid var(--neon-blue-dark);
    box-shadow: 0 2px 10px rgba(0, 255, 255, 0.3);
    flex-shrink: 0; /* Empêche l'heure de rétrécir si l'espace est limité */
    position: sticky; /* L'heure restera "collante" en haut quand la liste défile */
    top: 0; /* Reste collé au top de son conteneur défilant */
    z-index: 1; /* Assure qu'il est au-dessus du contenu de la liste */
}

/* Conteneur de la liste réelle des chaînes (qui défile) */
#channelList {
    flex-grow: 1; /* ❤️ Permet à la liste de prendre TOUT l'espace vertical restant */
    overflow-y: auto; /* ❤️ C'est ICI que le défilement vertical est activé */
    padding-top: 15px; /* Padding en haut de la liste (sous l'heure) */
    padding-left: 10px;
    padding-right: 10px;
    /* Le padding-bottom est géré par le #channelListContainer */
}

/* Scrollbar personnalisée pour la liste des chaînes */
/* Appliquez ces styles à l'élément qui a overflow-y: auto, c'est-à-dire #channelList */
#channelList::-webkit-scrollbar {
    width: 8px; /* Largeur de la barre de défilement */
}
#channelList::-webkit-scrollbar-track {
    background: var(--bg-light); /* Couleur de l'arrière-plan de la barre de défilement */
    border-radius: 10px;
}
#channelList::-webkit-scrollbar-thumb {
    background: var(--neon-blue-dark); /* Couleur du "pouce" de la barre de défilement */
    border-radius: 10px;
}
#channelList::-webkit-scrollbar-thumb:hover {
    background: var(--neon-blue); /* Couleur du pouce au survol */
}

/* Styles pour les éléments individuels des chaînes */
.channel-item {
    display: flex;
    align-items: center;
    padding: 10px;
    margin-bottom: 8px; /* Espace entre les items de chaîne */
    background-color: var(--bg-light);
    border-radius: 8px;
    cursor: pointer;
    transition: background-color 0.2s ease, transform 0.1s ease, box-shadow 0.2s ease;
    border: 1px solid transparent; /* Bordure transparente par défaut */
}
.channel-item:hover {
    background-color: var(--bg-dark);
    transform: translateY(-3px); /* Effet de légère élévation au survol */
    box-shadow: 0 0 10px rgba(0, 255, 255, 0.6), 0 0 5px rgba(0, 255, 255, 0.4);
    border-color: var(--neon-blue); /* Bordure néon au survol */
}
.channel-item.active {
    background-color: var(--neon-blue-dark);
    color: var(--neon-blue-light);
    box-shadow: 0 0 15px var(--neon-blue), 0 0 8px rgba(0, 255, 255, 0.6);
    border-color: var(--neon-blue);
}

.channel-item img {
    width: 40px;
    height: 40px;
    margin-right: 10px;
    border-radius: 50%; /* Image ronde */
    object-fit: contain; /* Assure que l'image tient dans le cercle */
    background-color: rgba(0, 0, 0, 0.4);
    padding: 4px;
    border: 2px solid var(--neon-blue-dark);
    box-shadow: 0 0 5px rgba(0, 255, 255, 0.3);
}
.channel-item.active img {
    border-color: var(--neon-blue-light);
    box-shadow: 0 0 10px var(--neon-blue);
}

.channel-item span {
    font-size: 1em;
    font-weight: bold;
    color: var(--text-color);
    text-shadow: 0 0 3px rgba(0, 255, 255, 0.3);
}
.channel-item.active span {
    color: var(--neon-blue-light);
    text-shadow: 0 0 5px var(--neon-blue-light);
}

/* Style du message d'information */
.message {
    margin-top: 30px;
    padding: 12px 25px;
    background-color: var(--bg-medium);
    border-radius: 8px;
    color: var(--neon-blue-light);
    text-align: center;
    font-size: 1em;
    box-shadow: 0 0 10px rgba(0, 255, 255, 0.3);
    border: 1px solid var(--neon-blue-dark);
}
html, body {
    height: 100%; /* Assure que le html et le body prennent toute la hauteur de la fenêtre */
}
body {
    /* ... votre CSS existant pour body ... */
    min-height: 100vh; /* Gardez ceci pour les cas où le contenu est plus petit que la fenêtre */
}
*, *::before, *::after {
    box-sizing: border-box;
}


/* Style de l'image de remplacement */
#videoPlaceholder {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%; /* Important : le conteneur doit prendre 100% de son parent #videoPlayer */
    height: 100%; /* Important : le conteneur doit prendre 100% de son parent #videoPlayer */
    display: flex; /* Pour centrer le contenu (icône play et texte) */
    justify-content: center;
    align-items: center;
    background-color: var(--bg-dark); /* Fallback si l'image ne charge pas */
    cursor: pointer;
    z-index: 2;
    opacity: 1;
    transition: opacity 0.3s ease-in-out;
    /* Assurez-vous qu'aucun autre style n'interfère avec width/height ici */
}

#videoPlaceholder.hidden {
    opacity: 0;
    pointer-events: none;
    z-index: 0;
}

#videoPlaceholder img {
    width: 100%; /* L'image prend 100% de la largeur de son parent #videoPlaceholder */
    height: 100%; /* L'image prend 100% de la hauteur de son parent #videoPlaceholder */
    object-fit: cover; /* ❤️ C'est CE QUI FAIT L'ADAPTATION ! */
    display: block; /* Important pour éviter les espaces sous l'image */
    /* Assurez-vous qu'aucun autre style n'interfère avec width/height/object-fit ici */
}

.play-overlay {
    position: absolute; /* Permet le centrage avec transform */
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: flex;
    flex-direction: column;
    align-items: center;
    color: var(--neon-blue-light);
    text-shadow: 0 0 5px var(--neon-blue);
    font-size: 1.5em; /* La taille du texte "Charger une chaîne" reste proportionnelle */
    font-weight: bold;
    pointer-events: none;
    opacity: 0.8;
    /* Supprimez les styles width/height ici si vous les définissez dans le HTML du SVG */
    /* width: auto; */
    /* height: auto; */
}

.play-overlay svg {
    /* La taille est maintenant définie dans le HTML directement sur la balise SVG (width="15%" height="auto") */
    /* Mais vous pouvez aussi la définir ici si vous préférez gérer ça avec CSS */
    /* Par exemple: */
    /* width: 15vw; */ /* 15% de la largeur du viewport, peut être moins précis */
    /* width: 10%; */ /* 10% de la largeur du parent .play-overlay */
    /* height: auto; */
    margin-bottom: 10px;
    filter: drop-shadow(0 0 8px var(--neon-blue));
}

Pour ajouter un indicateur VPN à côté de chaque chaîne dans votre interface, vous devrez modifier votre code CSS et la partie JavaScript qui génère les éléments HTML des chaînes.

1. Modifications CSS
Ajoutez les styles suivants à votre fichier CSS. J'ai inclus des options pour utiliser des icônes (recommandé pour le visuel) ou du texte.

CSS

/* --- Styles pour l'indicateur VPN --- */
.vpn-indicator {
  display: inline-flex; /* Utilisation de flexbox pour centrer le contenu si c'est une icône ou du texte */
  align-items: center;
  justify-content: center;
  width: 24px; /* Taille de l'icône/espace */
  height: 24px;
  margin-left: auto; /* Pousse l'indicateur tout à droite du channel-item */
  flex-shrink: 0; /* Empêche l'indicateur de rétrécir */
  /* Styles pour l'icône si vous utilisez background-image */
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center;
  font-size: 0.8em; /* Taille du texte si vous utilisez du texte */
  font-weight: bold;
  border-radius: 4px; /* Un peu d'arrondi pour le fond */
  padding: 2px; /* Un peu de padding interne */
}

/* Style pour les chaînes qui NÉCESSITENT un VPN */
.vpn-indicator[data-needs-vpn="true"] {
  /* Option 1: Utiliser une image d'icône VPN */
  background-image: url('https://i.imgur.com/your-vpn-icon.png'); /* REMPLACEZ PAR L'URL D'UNE ICÔNE VPN ROUGE/AVERTISSEMENT */
  background-color: rgba(255, 0, 0, 0.2); /* Un léger fond rouge transparent */
  border: 1px solid red;
  box-shadow: 0 0 5px rgba(255, 0, 0, 0.5);

  /* Option 2: Utiliser du texte (décommentez si vous préférez cette option) */
  /* content: 'VPN'; */
  /* color: red; */
  /* background-color: rgba(255, 0, 0, 0.2); */
  /* border: 1px solid red; */
  /* box-shadow: 0 0 5px rgba(255, 0, 0, 0.5); */
}

/* Style pour les chaînes qui NE NÉCESSITENT PAS de VPN */
.vpn-indicator[data-needs-vpn="false"] {
  /* Option 1: Utiliser une image d'icône "pas de VPN" (ex: un cadenas ouvert, un crochet vert) */
  background-image: url('https://i.imgur.com/your-no-vpn-icon.png'); /* REMPLACEZ PAR L'URL D'UNE ICÔNE VERTE/OK */
  background-color: rgba(0, 255, 0, 0.1); /* Un léger fond vert transparent */
  border: 1px solid limegreen;
  box-shadow: 0 0 5px rgba(0, 255, 0, 0.3);

  /* Option 2: Utiliser du texte (décommentez si vous préférez cette option) */
  /* content: 'OK'; */
  /* color: limegreen; */
  /* background-color: rgba(0, 255, 0, 0.1); */
  /* border: 1px solid limegreen; */
  /* box-shadow: 0 0 5px rgba(0, 255, 0, 0.3); */

  /* Option 3: Ne rien afficher du tout si pas de VPN (décommentez pour cacher l'indicateur) */
  /* display: none; */
}